{"abi":[{"type":"function","name":"addTokenAgent","inputs":[{"name":"_agentAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"bindToken","inputs":[{"name":"_token","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"canTransfer","inputs":[{"name":"_from","type":"address","internalType":"address"},{"name":"_to","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"created","inputs":[{"name":"_to","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"destroyed","inputs":[{"name":"_from","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isTokenAgent","inputs":[{"name":"_agentAddress","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isTokenBound","inputs":[{"name":"_token","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"removeTokenAgent","inputs":[{"name":"_agentAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferred","inputs":[{"name":"_from","type":"address","internalType":"address"},{"name":"_to","type":"address","internalType":"address"},{"name":"_amount","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unbindToken","inputs":[{"name":"_token","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"TokenAgentAdded","inputs":[{"name":"_agentAddress","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TokenAgentRemoved","inputs":[{"name":"_agentAddress","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TokenBound","inputs":[{"name":"_token","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"TokenUnbound","inputs":[{"name":"_token","type":"address","indexed":false,"internalType":"address"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"addTokenAgent(address)":"ff3e6954","bindToken(address)":"3ff5aa02","canTransfer(address,address,uint256)":"e46638e6","created(address,uint256)":"5f8dead3","destroyed(address,uint256)":"8d2ea772","isTokenAgent(address)":"346531fa","isTokenBound(address)":"993e8b95","removeTokenAgent(address)":"cdde2932","transferred(address,address,uint256)":"8baf29b4","unbindToken(address)":"40db3b50"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"TokenAgentAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"TokenAgentRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenUnbound\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"addTokenAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"bindToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"canTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"created\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"destroyed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"isTokenAgent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenBound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"removeTokenAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferred\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"unbindToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTokenAgent(address)\":{\"details\":\"adds an agent to the list of token agents\",\"params\":{\"_agentAddress\":\"address of the agent to be added  Emits a TokenAgentAdded event\"}},\"bindToken(address)\":{\"details\":\"binds a token to the compliance contract\",\"params\":{\"_token\":\"address of the token to bind  Emits a TokenBound event\"}},\"canTransfer(address,address,uint256)\":{\"details\":\"checks that the transfer is compliant.  default compliance always returns true  READ ONLY FUNCTION, this function cannot be used to increment  counters, emit events, ...\",\"params\":{\"_amount\":\"The amount of tokens involved in the transfer\",\"_from\":\"The address of the sender\",\"_to\":\"The address of the receiver\"}},\"created(address,uint256)\":{\"details\":\"function called whenever tokens are created  on a wallet  this function can update state variables in the compliance contract  these state variables being used by `canTransfer` to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the compliance smart contract\",\"params\":{\"_amount\":\"The amount of tokens involved in the transfer\",\"_to\":\"The address of the receiver\"}},\"destroyed(address,uint256)\":{\"details\":\"function called whenever tokens are destroyed  this function can update state variables in the compliance contract  these state variables being used by `canTransfer` to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the compliance smart contract\",\"params\":{\"_amount\":\"The amount of tokens involved in the transfer\",\"_from\":\"The address of the receiver\"}},\"isTokenAgent(address)\":{\"details\":\"Returns true if the Address is in the list of token agents\",\"params\":{\"_agentAddress\":\"address of this agent\"}},\"isTokenBound(address)\":{\"details\":\"Returns true if the address given corresponds to a token that is bound with the Compliance contract\",\"params\":{\"_token\":\"address of the token\"}},\"removeTokenAgent(address)\":{\"details\":\"remove Agent from the list of token agents\",\"params\":{\"_agentAddress\":\"address of the agent to be removed (must be added first)  Emits a TokenAgentRemoved event\"}},\"transferred(address,address,uint256)\":{\"details\":\"function called whenever tokens are transferred  from one wallet to another  this function can update state variables in the compliance contract  these state variables being used by `canTransfer` to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the compliance smart contract\",\"params\":{\"_amount\":\"The amount of tokens involved in the transfer\",\"_from\":\"The address of the sender\",\"_to\":\"The address of the receiver\"}},\"unbindToken(address)\":{\"details\":\"unbinds a token from the compliance contract\",\"params\":{\"_token\":\"address of the token to unbind  Emits a TokenUnbound event\"}}},\"version\":1},\"userdoc\":{\"events\":{\"TokenAgentAdded(address)\":{\"notice\":\"this event is emitted when the Agent has been added on the allowedList of this Compliance.  the event is emitted by the Compliance constructor and by the addTokenAgent function  `_agentAddress` is the address of the Agent to add\"},\"TokenAgentRemoved(address)\":{\"notice\":\"this event is emitted when the Agent has been removed from the agent list of this Compliance.  the event is emitted by the Compliance constructor and by the removeTokenAgent function  `_agentAddress` is the address of the Agent to remove\"},\"TokenBound(address)\":{\"notice\":\"this event is emitted when a token has been bound to the compliance contract  the event is emitted by the bindToken function  `_token` is the address of the token to bind\"},\"TokenUnbound(address)\":{\"notice\":\"this event is emitted when a token has been unbound from the compliance contract  the event is emitted by the unbindToken function  `_token` is the address of the token to unbind\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/erc3643/compliance/legacy/ICompliance.sol\":\"ICompliance\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@pythnetwork/=node_modules/@pythnetwork/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/erc3643/compliance/legacy/ICompliance.sol\":{\"keccak256\":\"0xe6d88f1eb17685150a6f536910546c6275079fde441f6c536a640b3eb146c1a7\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://0a2a3758989bbe6d68831268b54e50c326403ceb82d08ecffc700b045eabef9e\",\"dweb:/ipfs/QmQpcrFPREyxcwyfV1yKzdwaQDfVY5qSSpkV381WJwKrpV\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"_agentAddress","type":"address","indexed":false}],"type":"event","name":"TokenAgentAdded","anonymous":false},{"inputs":[{"internalType":"address","name":"_agentAddress","type":"address","indexed":false}],"type":"event","name":"TokenAgentRemoved","anonymous":false},{"inputs":[{"internalType":"address","name":"_token","type":"address","indexed":false}],"type":"event","name":"TokenBound","anonymous":false},{"inputs":[{"internalType":"address","name":"_token","type":"address","indexed":false}],"type":"event","name":"TokenUnbound","anonymous":false},{"inputs":[{"internalType":"address","name":"_agentAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"addTokenAgent"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"bindToken"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"view","type":"function","name":"canTransfer","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"created"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"destroyed"},{"inputs":[{"internalType":"address","name":"_agentAddress","type":"address"}],"stateMutability":"view","type":"function","name":"isTokenAgent","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"stateMutability":"view","type":"function","name":"isTokenBound","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_agentAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"removeTokenAgent"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferred"},{"inputs":[{"internalType":"address","name":"_token","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"unbindToken"}],"devdoc":{"kind":"dev","methods":{"addTokenAgent(address)":{"details":"adds an agent to the list of token agents","params":{"_agentAddress":"address of the agent to be added  Emits a TokenAgentAdded event"}},"bindToken(address)":{"details":"binds a token to the compliance contract","params":{"_token":"address of the token to bind  Emits a TokenBound event"}},"canTransfer(address,address,uint256)":{"details":"checks that the transfer is compliant.  default compliance always returns true  READ ONLY FUNCTION, this function cannot be used to increment  counters, emit events, ...","params":{"_amount":"The amount of tokens involved in the transfer","_from":"The address of the sender","_to":"The address of the receiver"}},"created(address,uint256)":{"details":"function called whenever tokens are created  on a wallet  this function can update state variables in the compliance contract  these state variables being used by `canTransfer` to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the compliance smart contract","params":{"_amount":"The amount of tokens involved in the transfer","_to":"The address of the receiver"}},"destroyed(address,uint256)":{"details":"function called whenever tokens are destroyed  this function can update state variables in the compliance contract  these state variables being used by `canTransfer` to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the compliance smart contract","params":{"_amount":"The amount of tokens involved in the transfer","_from":"The address of the receiver"}},"isTokenAgent(address)":{"details":"Returns true if the Address is in the list of token agents","params":{"_agentAddress":"address of this agent"}},"isTokenBound(address)":{"details":"Returns true if the address given corresponds to a token that is bound with the Compliance contract","params":{"_token":"address of the token"}},"removeTokenAgent(address)":{"details":"remove Agent from the list of token agents","params":{"_agentAddress":"address of the agent to be removed (must be added first)  Emits a TokenAgentRemoved event"}},"transferred(address,address,uint256)":{"details":"function called whenever tokens are transferred  from one wallet to another  this function can update state variables in the compliance contract  these state variables being used by `canTransfer` to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the compliance smart contract","params":{"_amount":"The amount of tokens involved in the transfer","_from":"The address of the sender","_to":"The address of the receiver"}},"unbindToken(address)":{"details":"unbinds a token from the compliance contract","params":{"_token":"address of the token to unbind  Emits a TokenUnbound event"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","@pythnetwork/=node_modules/@pythnetwork/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/erc3643/compliance/legacy/ICompliance.sol":"ICompliance"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/erc3643/compliance/legacy/ICompliance.sol":{"keccak256":"0xe6d88f1eb17685150a6f536910546c6275079fde441f6c536a640b3eb146c1a7","urls":["bzz-raw://0a2a3758989bbe6d68831268b54e50c326403ceb82d08ecffc700b045eabef9e","dweb:/ipfs/QmQpcrFPREyxcwyfV1yKzdwaQDfVY5qSSpkV381WJwKrpV"],"license":"GPL-3.0"}},"version":1},"id":26}