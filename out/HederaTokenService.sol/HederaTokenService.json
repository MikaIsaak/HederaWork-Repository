{"abi":[{"type":"function","name":"redirectForToken","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"encodedFunctionSelector","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"responseCode","type":"int256","internalType":"int256"},{"name":"response","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"responseCode","type":"int64","internalType":"int64"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFromNFT","inputs":[{"name":"token","type":"address","internalType":"address"},{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"serialNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"responseCode","type":"int64","internalType":"int64"}],"stateMutability":"nonpayable"},{"type":"event","name":"CallResponseEvent","inputs":[{"name":"","type":"bool","indexed":false,"internalType":"bool"},{"name":"","type":"bytes","indexed":false,"internalType":"bytes"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"redirectForToken(address,bytes)":"618dc65e","transferFrom(address,address,address,uint256)":"15dacbea","transferFromNFT(address,address,address,uint256)":"9b23d3d9"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"CallResponseEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"encodedFunctionSelector\",\"type\":\"bytes\"}],\"name\":\"redirectForToken\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"responseCode\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"serialNumber\",\"type\":\"uint256\"}],\"name\":\"transferFromNFT\",\"outputs\":[{\"internalType\":\"int64\",\"name\":\"responseCode\",\"type\":\"int64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"redirectForToken(address,bytes)\":{\"params\":{\"encodedFunctionSelector\":\"The function selector from the ERC20 interface + the bytes input for the function called\",\"token\":\"The token address\"},\"returns\":{\"response\":\"The result of the call that had been encoded and sent for execution.\",\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"transferFrom(address,address,address,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to transfer from `from` to `to`\",\"from\":\"The account address of the owner of the token, on the behalf of which to transfer `amount` tokens\",\"to\":\"The account address of the receiver of the `amount` tokens\",\"token\":\"The address of the fungible Hedera token to transfer\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}},\"transferFromNFT(address,address,address,uint256)\":{\"params\":{\"from\":\"The account address of the owner of `serialNumber` of `token`\",\"serialNumber\":\"The NFT serial number to transfer\",\"to\":\"The account address of the receiver of `serialNumber`\",\"token\":\"The address of the non-fungible Hedera token to transfer\"},\"returns\":{\"responseCode\":\"The response code for the status of the request. SUCCESS is 22.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"CallResponseEvent(bool,bytes)\":{\"notice\":\"Generic event\"}},\"kind\":\"user\",\"methods\":{\"redirectForToken(address,bytes)\":{\"notice\":\"Redirect for token\"},\"transferFrom(address,address,address,uint256)\":{\"notice\":\"Only applicable to fungible tokens\"},\"transferFromNFT(address,address,address,uint256)\":{\"notice\":\"Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism. Only applicable to NFT tokens\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/common/hedera/HederaTokenService.sol\":\"HederaTokenService\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@pythnetwork/=node_modules/@pythnetwork/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/common/hedera/HederaResponseCodes.sol\":{\"keccak256\":\"0x85734572347c25f45480488ad4fdb63ed749a794daac839540f5b0eb7dbb22e6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://addc4c8c31e1b3fd001986599856bb39e9cb4532a922155f699aae1686563e63\",\"dweb:/ipfs/QmXJES7o4xoSowiDo3qm3Mr3LaWm7g5qTQosw5EAAiz9R5\"]},\"contracts/common/hedera/HederaTokenService.sol\":{\"keccak256\":\"0x91138524b7d67ef498b1cade84eb4f79b5d7cc8b3b59f6c2f60439b91f6c3e79\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4d3a8bcc40da8200571c06b531fcb6b964dfb8d3cb2fd0e96300452b301e2db9\",\"dweb:/ipfs/Qmcv17ozumtuJLNYZz2evqUbRc2dyvprVYeh7Rq1qBrjHG\"]},\"contracts/common/hedera/IHederaTokenService.sol\":{\"keccak256\":\"0xd0606986a26e82ecd4c2cadd498a74fe9fc2061bd65f4e90592d51962ffbd245\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://786b1c29918038c33f7154c7df73d1a668482965ad0dfe920309533314050b6d\",\"dweb:/ipfs/QmV2Lvy9wvWBxXfSz2tPimZf5xEsDwsWqqujyY2a75i7Te\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.24+commit.e11b9ed9"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bool","name":"","type":"bool","indexed":false},{"internalType":"bytes","name":"","type":"bytes","indexed":false}],"type":"event","name":"CallResponseEvent","anonymous":false},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"bytes","name":"encodedFunctionSelector","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"redirectForToken","outputs":[{"internalType":"int256","name":"responseCode","type":"int256"},{"internalType":"bytes","name":"response","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}]},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"serialNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFromNFT","outputs":[{"internalType":"int64","name":"responseCode","type":"int64"}]}],"devdoc":{"kind":"dev","methods":{"redirectForToken(address,bytes)":{"params":{"encodedFunctionSelector":"The function selector from the ERC20 interface + the bytes input for the function called","token":"The token address"},"returns":{"response":"The result of the call that had been encoded and sent for execution.","responseCode":"The response code for the status of the request. SUCCESS is 22."}},"transferFrom(address,address,address,uint256)":{"params":{"amount":"The amount of tokens to transfer from `from` to `to`","from":"The account address of the owner of the token, on the behalf of which to transfer `amount` tokens","to":"The account address of the receiver of the `amount` tokens","token":"The address of the fungible Hedera token to transfer"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}},"transferFromNFT(address,address,address,uint256)":{"params":{"from":"The account address of the owner of `serialNumber` of `token`","serialNumber":"The NFT serial number to transfer","to":"The account address of the receiver of `serialNumber`","token":"The address of the non-fungible Hedera token to transfer"},"returns":{"responseCode":"The response code for the status of the request. SUCCESS is 22."}}},"version":1},"userdoc":{"kind":"user","methods":{"redirectForToken(address,bytes)":{"notice":"Redirect for token"},"transferFrom(address,address,address,uint256)":{"notice":"Only applicable to fungible tokens"},"transferFromNFT(address,address,address,uint256)":{"notice":"Transfers `serialNumber` of `token` from `from` to `to` using the allowance mechanism. Only applicable to NFT tokens"}},"version":1}},"settings":{"remappings":["@openzeppelin/=node_modules/@openzeppelin/","@pythnetwork/=node_modules/@pythnetwork/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/common/hedera/HederaTokenService.sol":"HederaTokenService"},"evmVersion":"paris","libraries":{}},"sources":{"contracts/common/hedera/HederaResponseCodes.sol":{"keccak256":"0x85734572347c25f45480488ad4fdb63ed749a794daac839540f5b0eb7dbb22e6","urls":["bzz-raw://addc4c8c31e1b3fd001986599856bb39e9cb4532a922155f699aae1686563e63","dweb:/ipfs/QmXJES7o4xoSowiDo3qm3Mr3LaWm7g5qTQosw5EAAiz9R5"],"license":"Apache-2.0"},"contracts/common/hedera/HederaTokenService.sol":{"keccak256":"0x91138524b7d67ef498b1cade84eb4f79b5d7cc8b3b59f6c2f60439b91f6c3e79","urls":["bzz-raw://4d3a8bcc40da8200571c06b531fcb6b964dfb8d3cb2fd0e96300452b301e2db9","dweb:/ipfs/Qmcv17ozumtuJLNYZz2evqUbRc2dyvprVYeh7Rq1qBrjHG"],"license":"Apache-2.0"},"contracts/common/hedera/IHederaTokenService.sol":{"keccak256":"0xd0606986a26e82ecd4c2cadd498a74fe9fc2061bd65f4e90592d51962ffbd245","urls":["bzz-raw://786b1c29918038c33f7154c7df73d1a668482965ad0dfe920309533314050b6d","dweb:/ipfs/QmV2Lvy9wvWBxXfSz2tPimZf5xEsDwsWqqujyY2a75i7Te"],"license":"Apache-2.0"}},"version":1},"id":6}